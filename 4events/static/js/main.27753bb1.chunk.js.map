{"version":3,"sources":["components/Home.js","components/admins/List.js","components/widgets/fields/UrlField.js","components/widgets/fields/Styles.js","components/admins/Icon.js","components/organizers/Icon.js","components/organizers/List.js","components/organizers/Create.js","components/organizers/Edit.js","components/users/List.js","components/users/Create.js","components/users/Edit.js","components/users/Icon.js","components/types/Icon.js","components/types/List.js","components/types/Create.js","components/types/Edit.js","components/events/List.js","components/events/Edit.js","components/events/Create.js","components/events/Icon.js","App/cfg.js","api/service/index.js","api/client2/index.js","api/index.js","api/firebase/index.js","api/client2/addUploadFeature.js","api/auth/index.js","i18n/index.js","App/App.js","utils/JSON.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","Card_default","CardContent_default","ResList","withStyles","urlLink","textDecoration","urlLinkIcon","width","paddingLeft","_ref","_ref$record","record","source","classes","href","target","className","Launch_default","props","List","Object","assign","sort","field","order","Datagrid","rowClick","TextField","EmailField","ResIcon","Icon","ResFilter","Filter","TextInput","label","alwaysOn","filters","List_ResFilter","EditButton","ResCreate","Create","SimpleForm","ReferenceInput","reference","SelectInput","optionText","ResTitle","name","firstName","first_name","lastName","last_name","concat","getName","email","getTitle","ResEdit","Edit","title","Edit_ResTitle","redirect","DisabledInput","users_List_ResFilter","users_Edit_ResTitle","padding","objectWithoutProperties","pagination","ReferenceField","DateField","events_Edit_ResTitle","TabbedForm","validate","values","errors","begin_date","getTime","end_date","FormTab","required","DateTimeInput","FormDataConsumer","_ref2","formData","rest","defaultValue","Date","undefined","LongTextInput","NumberInput","_ref3","indoor","BooleanInput","_ref4","free","_Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","Component","service","baseURL","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebaseBucketConsole","setup","serviceConfig","axios","defaults","headers","post","console","log","login","password","httpAuthClient","url","options","length","Headers","Accept","set","token","localStorage","getItem","fetchUtils","fetchJson","firebaseConfig","signInAnonymously","catch","error","uploadFileToFirebase","file","ref","child","put","contentType","type","then","snapshot","getDownloadURL","rawFile","addUploadFeature","requestHandler","resource","params","newPictures","data","pictures","Promise","all","map","fileURLs","fileURL","src","transformedNewPictures","objectSpread","toConsumableArray","auth","AUTH_LOGIN","username","response","status","Error","statusText","setItem","user","_id","profile","config","request","message","AUTH_LOGOUT","removeItem","resolve","AUTH_ERROR","reject","es","ra","page","dashboard","action","export","navigation","page_rows_per_page","invalid_form","app","user_or_pass_wrong","user_email_duplicated","user_or_password_wrong","Not Found","invalid_format_city","invalid_format_mobile_number","invalid_format_phone_number","invalid_format_email","invalid_format_begin_date","invalid_date","invalid_format_end_date","error_saving_data","resources","admins","fields","organizers","address","zip_code","city","province","country","idn","company_name","mobile_number","phone_number","website","users","eventtypes","id","events","organizer","location","event_type","transaction","media","adress","max_visitors","price","min_age","description","create_date","messages","mergeObjects","obj1","obj2","JSON","parse","stringify","merged","key1","key2","stdSpanishMessages","i18nProvider","locale","uploadCapableDataProvider","apiUrl","httpClient","GET_MANY","ids","method","responses","json","result","UPDATE_MANY","body","DELETE_MANY","admin","_convertDataRequestTo","GET_LIST","_params$pagination","perPage","_params$sort","orderSign","sortQuery","filterQuery","filter","q","query","skip","limit","includeTotal","GET_ONE","UPDATE","__v","delete_date","CREATE","DELETE","convertDataRequestToHTTP","rows","total","item","res","coordinates","convertHTTPResponse","HttpError","api","Config","App","Admin","authProvider","dataProvider","Resource","icon","AdminIcon","list","AdminList","OrganizerIcon","OrganizerList","create","OrganizerCreate","edit","OrganizerEdit","UserIcon","UserList","UserCreate","UserEdit","EventIcon","EventList","EventCreate","EventEdit","TypeIcon","TypeList","TypeCreate","TypeEdit","Boolean","window","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.27753bb1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nexport default () => (\r\n  <Card>\r\n    <CardContent>Pantalla Principal del BackOffice</CardContent>\r\n  </Card>\r\n);\r\n","import React from \"react\";\r\nimport { List, Datagrid, TextField, EmailField } from \"react-admin\";\r\n\r\nimport { UrlField } from \"../widgets\";\r\n\r\nexport const ResList = props => (\r\n  <List {...props} sort={{ field: \"alias\", order: \"ASC\" }}>\r\n    <Datagrid rowClick=\"edit\">\r\n      <TextField source=\"alias\" />\r\n      <TextField source=\"first_name\" />\r\n\r\n      <EmailField source=\"email\" />\r\n      <TextField source=\"profile\" />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport LaunchIcon from \"@material-ui/icons/Launch\";\r\n\r\nimport { default as styles } from \"./Styles.js\";\r\n\r\nconst UrlField = ({ record = {}, source, classes }) => (\r\n  <a\r\n    href={\"http://\" + record[source]}\r\n    target=\"_new\"\r\n    className={classes.urlLink}\r\n  >\r\n    {record[source]}\r\n    <LaunchIcon className={classes.urlLinkIcon} />\r\n  </a>\r\n);\r\n\r\nexport default withStyles(styles)(UrlField);\r\n","export default {\n  urlLink: {\n    textDecoration: \"none\"\n  },\n  urlLinkIcon: {\n    width: \"0.5em\",\n    paddingLeft: \"2px\"\n  }\n};\n","import Icon from \"@material-ui/icons/Person\";\r\nexport const ResIcon = Icon;\r\n","import Icon from \"@material-ui/icons/Laptop\";\r\nexport const ResIcon = Icon;\r\n","import React from \"react\";\r\nimport {\r\n  List,\r\n  Filter,\r\n  Datagrid,\r\n  TextInput,\r\n  TextField,\r\n  EmailField,\r\n  EditButton\r\n} from \"react-admin\";\r\n\r\nimport { UrlField } from \"../widgets\";\r\n\r\nconst ResFilter = props => (\r\n  <Filter {...props}>\r\n    <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n  </Filter>\r\n);\r\n\r\nexport const ResList = props => (\r\n  <List\r\n    {...props}\r\n    sort={{ field: \"company\", order: \"ASC\" }}\r\n    filters={<ResFilter />}\r\n  >\r\n    <Datagrid rowClick=\"edit\">\r\n      <TextField source=\"company\" />\r\n      <TextField source=\"first_name\" />\r\n      <TextField source=\"last_name\" />\r\n      <EmailField source=\"email\" />\r\n      <TextField source=\"profile\" />\r\n      <EditButton />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  Create,\r\n  SimpleForm,\r\n  TextInput,\r\n  ReferenceInput,\r\n  SelectInput\r\n} from \"react-admin\";\r\n\r\nexport const ResCreate = props => (\r\n  <Create {...props}>\r\n    <SimpleForm>\r\n      <TextInput source=\"idn\" />\r\n      <TextInput source=\"company_name\" />\r\n      <TextInput source=\"alias\" />\r\n      <TextInput source=\"email\" />\r\n      <TextInput source=\"password\" />\r\n      <TextInput source=\"first_name\" />\r\n      <TextInput source=\"last_name\" />\r\n      <TextInput source=\"address\" />\r\n      <TextInput source=\"zip_code\" />\r\n      <TextInput source=\"city\" />\r\n      <ReferenceInput source=\"province\" reference=\"provinces\">\r\n        <SelectInput optionText=\"name\" />\r\n      </ReferenceInput>\r\n      <ReferenceInput source=\"country\" reference=\"countries\">\r\n        <SelectInput optionText=\"name\" />\r\n      </ReferenceInput>\r\n      <TextInput source=\"mobile_number\" />\r\n      <TextInput source=\"phone_number\" />\r\n    </SimpleForm>\r\n  </Create>\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  Edit,\r\n  SimpleForm,\r\n  DisabledInput,\r\n  TextInput,\r\n  ReferenceInput,\r\n  SelectInput\r\n} from \"react-admin\";\r\nimport { replaceSubstitutionTransformer } from \"common-tags\";\r\n\r\n// Title\r\nconst getName = record => {\r\n  if (!record) return \"\";\r\n\r\n  /* set */\r\n  let firstName = record.first_name;\r\n  let lastName = record.last_name;\r\n\r\n  /* done */\r\n  return lastName && lastName !== \"\"\r\n    ? `${firstName} ${lastName}`\r\n    : `${firstName}`;\r\n};\r\nconst getTitle = record => {\r\n  if (!record) return \"\";\r\n\r\n  /* set */\r\n  let name = getName(record);\r\n  let email = record.email;\r\n\r\n  return `${name} (${email})`;\r\n};\r\nconst ResTitle = ({ record }) => {\r\n  return <span> {getTitle(record)}</span>;\r\n};\r\n\r\nexport const ResEdit = props => (\r\n  <Edit {...props} title={<ResTitle />}>\r\n    <SimpleForm redirect={false}>\r\n      <DisabledInput source=\"id\" />\r\n      <TextInput source=\"idn\" />\r\n      <TextInput source=\"company_name\" />\r\n      <TextInput source=\"alias\" />\r\n      <TextInput source=\"email\" />\r\n      <TextInput source=\"first_name\" />\r\n      <TextInput source=\"last_name\" />\r\n      <TextInput source=\"address\" />\r\n      <TextInput source=\"zip_code\" />\r\n      <TextInput source=\"city\" />\r\n      <ReferenceInput source=\"province\" reference=\"provinces\">\r\n        <SelectInput optionText=\"name\" />\r\n      </ReferenceInput>\r\n      <ReferenceInput source=\"country\" reference=\"countries\">\r\n        <SelectInput optionText=\"name\" />\r\n      </ReferenceInput>\r\n      <TextInput source=\"mobile_number\" />\r\n      <TextInput source=\"phone_number\" />\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  List,\r\n  Filter,\r\n  Datagrid,\r\n  TextField,\r\n  TextInput,\r\n  EmailField,\r\n  EditButton\r\n} from \"react-admin\";\r\n\r\nimport { UrlField } from \"../widgets\";\r\n\r\nconst ResFilter = props => (\r\n  <Filter {...props}>\r\n    <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n  </Filter>\r\n);\r\n\r\nexport const ResList = props => (\r\n  <List\r\n    {...props}\r\n    sort={{ field: \"alias\", order: \"ASC\" }}\r\n    filters={<ResFilter />}\r\n  >\r\n    <Datagrid rowClick=\"edit\">\r\n      <TextField source=\"alias\" />\r\n      <TextField source=\"first_name\" />\r\n      <TextField source=\"last_name\" />\r\n      <EmailField source=\"email\" />\r\n      <TextField source=\"profile\" />\r\n      <EditButton />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  Create,\r\n  SimpleForm,\r\n  TextInput,\r\n  ReferenceInput,\r\n  SelectInput\r\n} from \"react-admin\";\r\n\r\nexport const ResCreate = props => (\r\n  <Create {...props}>\r\n    <SimpleForm>\r\n      <TextInput source=\"alias\" />\r\n      <TextInput source=\"email\" />\r\n      <TextInput source=\"password\" />\r\n      <TextInput source=\"first_name\" />\r\n      <TextInput source=\"last_name\" />\r\n      <TextInput source=\"address\" />\r\n      <TextInput source=\"zip_code\" />\r\n      <TextInput source=\"city\" />\r\n      <ReferenceInput source=\"province\" reference=\"provinces\">\r\n        <SelectInput optionText=\"name\" />\r\n      </ReferenceInput>\r\n      <ReferenceInput source=\"country\" reference=\"countries\">\r\n        <SelectInput optionText=\"name\" />\r\n      </ReferenceInput>\r\n      <TextInput source=\"mobile_number\" />\r\n    </SimpleForm>\r\n  </Create>\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  Edit,\r\n  SimpleForm,\r\n  DisabledInput,\r\n  TextInput,\r\n  ReferenceInput,\r\n  SelectInput\r\n} from \"react-admin\";\r\n\r\n// Title\r\nconst getName = record => {\r\n  if (!record) return \"\";\r\n\r\n  /* set */\r\n  let firstName = record.first_name;\r\n  let lastName = record.last_name;\r\n\r\n  /* done */\r\n  return lastName && lastName !== \"\"\r\n    ? `${firstName} ${lastName}`\r\n    : `${firstName}`;\r\n};\r\nconst getTitle = record => {\r\n  if (!record) return \"\";\r\n\r\n  /* set */\r\n  let name = getName(record);\r\n  let email = record.email;\r\n\r\n  return `${name} (${email})`;\r\n};\r\nconst ResTitle = ({ record }) => {\r\n  return <span> {getTitle(record)}</span>;\r\n};\r\nexport const ResEdit = props => (\r\n  <Edit {...props} title={<ResTitle />}>\r\n    <SimpleForm redirect={false}>\r\n      <DisabledInput source=\"id\" />\r\n      <TextInput source=\"alias\" />\r\n      <TextInput source=\"email\" />\r\n      <TextInput source=\"first_name\" />\r\n      <TextInput source=\"last_name\" />\r\n      <TextInput source=\"address\" />\r\n      <TextInput source=\"zip_code\" />\r\n      <TextInput source=\"city\" />\r\n      <ReferenceInput source=\"province\" reference=\"provinces\">\r\n        <SelectInput optionText=\"name\" />\r\n      </ReferenceInput>\r\n      <ReferenceInput source=\"country\" reference=\"countries\">\r\n        <SelectInput optionText=\"name\" />\r\n      </ReferenceInput>\r\n      <TextInput source=\"mobile_number\" />\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n","import Icon from \"@material-ui/icons/Group\";\r\nexport const ResIcon = Icon;\r\n","import Icon from \"@material-ui/icons/Bookmark\";\r\nexport const ResIcon = Icon;\r\n","import React from \"react\";\r\nimport { List, Datagrid, TextField, EditButton } from \"react-admin\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nconst listStyles = { name: { padding: \"0 2em 0 4em\" } };\r\n\r\nexport const ResList = withStyles(listStyles)(({ classes, ...props }) => (\r\n  <List {...props} sort={{ field: \"name\", order: \"ASC\" }} pagination={null}>\r\n    <Datagrid>\r\n      <TextField source=\"name\" className={classes.name} />\r\n      <EditButton />\r\n    </Datagrid>\r\n  </List>\r\n));\r\n","import React from \"react\";\r\nimport { Create, SimpleForm, TextInput } from \"react-admin\";\r\n\r\nexport const ResCreate = props => (\r\n  <Create {...props}>\r\n    <SimpleForm redirect={\"/eventtypes\"}>\r\n      <TextInput source=\"name\" />\r\n    </SimpleForm>\r\n  </Create>\r\n);\r\n","import React from \"react\";\r\nimport { Edit, SimpleForm, DisabledInput, TextInput } from \"react-admin\";\r\n\r\nexport const ResEdit = props => (\r\n  <Edit {...props}>\r\n    <SimpleForm>\r\n      <DisabledInput source=\"id\" />\r\n      <TextInput source=\"name\" />\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  List,\r\n  Datagrid,\r\n  TextField,\r\n  DateField,\r\n  ReferenceField,\r\n  EditButton\r\n} from \"react-admin\";\r\n\r\nexport const ResList = props => (\r\n  <List {...props} sort={{ field: \"begin_date\", order: \"DESC\" }}>\r\n    <Datagrid rowClick=\"edit\">\r\n      <ReferenceField source=\"organizer\" reference=\"organizers\">\r\n        <TextField source=\"email\" />\r\n      </ReferenceField>\r\n      <DateField source=\"begin_date\" />\r\n      <TextField source=\"name\" />\r\n      <ReferenceField source=\"event_type\" reference=\"eventtypes\">\r\n        <TextField source=\"name\" />\r\n      </ReferenceField>\r\n      <TextField source=\"city\" />\r\n      <EditButton />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  Edit,\r\n  DisabledInput,\r\n  TextInput,\r\n  LongTextInput,\r\n  DateTimeInput,\r\n  BooleanInput,\r\n  NumberInput,\r\n  ReferenceInput,\r\n  SelectInput,\r\n  required,\r\n  FormDataConsumer,\r\n  TabbedForm,\r\n  FormTab\r\n} from \"react-admin\";\r\n\r\nconst ResTitle = ({ record }) => {\r\n  return <span> {record ? `Evento \"${record.name}\"` : \"\"}</span>;\r\n};\r\n\r\n// Validate\r\nconst validate = values => {\r\n  const errors = {};\r\n  if (\r\n    values.begin_date &&\r\n    values.begin_date.getTime &&\r\n    !values.begin_date.getTime()\r\n  ) {\r\n    errors.begin_date = [\"Fecha incorrecta\"];\r\n  }\r\n  if (\r\n    values.end_date &&\r\n    values.end_date.getTime &&\r\n    !values.end_date.getTime()\r\n  ) {\r\n    errors.end_date = [\"Fecha incorrecta\"];\r\n  }\r\n  return errors;\r\n};\r\nexport const ResEdit = props => (\r\n  <Edit {...props} title={<ResTitle />}>\r\n    <TabbedForm redirect={false} validate={values => validate(values)}>\r\n      <FormTab label=\"Datos Generales\">\r\n        <ReferenceInput\r\n          source=\"organizer\"\r\n          reference=\"organizers\"\r\n          validate={required()}\r\n        >\r\n          <SelectInput optionText=\"email\" />\r\n        </ReferenceInput>\r\n        <DateTimeInput source=\"begin_date\" validate={required()} />\r\n        <FormDataConsumer>\r\n          {({ formData, ...rest }) => (\r\n            <DateTimeInput\r\n              source=\"end_date\"\r\n              validate={required()}\r\n              defaultValue={\r\n                formData.begin_date && formData.begin_date.getTime\r\n                  ? new Date(formData.begin_date.getTime() + 3600000)\r\n                  : undefined\r\n              }\r\n              {...rest}\r\n            />\r\n          )}\r\n        </FormDataConsumer>\r\n\r\n        <TextInput source=\"name\" validate={required()} />\r\n        <ReferenceInput\r\n          source=\"event_type\"\r\n          reference=\"eventtypes\"\r\n          validate={required()}\r\n        >\r\n          <SelectInput optionText=\"name\" />\r\n        </ReferenceInput>\r\n        <TextInput source=\"city\" validate={required()} />\r\n        <LongTextInput source=\"description\" />\r\n      </FormTab>\r\n      <FormTab label=\"Ubicación\">\r\n        <TextInput source=\"location\" defaultValue=\"-5.748529,41.513958\" />\r\n        <TextInput source=\"adress\" />\r\n        <TextInput source=\"zip_code\" />\r\n\r\n        <ReferenceInput source=\"province\" reference=\"provinces\">\r\n          <SelectInput optionText=\"name\" />\r\n        </ReferenceInput>\r\n\r\n        <ReferenceInput source=\"country\" reference=\"countries\">\r\n          <SelectInput optionText=\"name\" />\r\n        </ReferenceInput>\r\n      </FormTab>\r\n      <FormTab label=\"Información Adicional\">\r\n        <NumberInput source=\"min_age\" />\r\n\r\n        <FormDataConsumer>\r\n          {({ formData, ...rest }) =>\r\n            formData.indoor && <NumberInput source=\"max_visitors\" {...rest} />\r\n          }\r\n        </FormDataConsumer>\r\n        <BooleanInput source=\"indoor\" />\r\n\r\n        <FormDataConsumer>\r\n          {({ formData, ...rest }) =>\r\n            !formData.free && <NumberInput source=\"price\" {...rest} />\r\n          }\r\n        </FormDataConsumer>\r\n        <BooleanInput source=\"free\" defaultValue={true} />\r\n      </FormTab>\r\n    </TabbedForm>\r\n  </Edit>\r\n);\r\n","import React, { Component } from \"react\";\r\n\r\nimport {\r\n  Create,\r\n  TextInput,\r\n  ReferenceInput,\r\n  SelectInput,\r\n  DateTimeInput,\r\n  LongTextInput,\r\n  BooleanInput,\r\n  NumberInput,\r\n  required,\r\n  FormDataConsumer,\r\n  TabbedForm,\r\n  FormTab\r\n} from \"react-admin\";\r\n\r\n// Validate\r\nconst validate = values => {\r\n  const errors = {};\r\n  if (\r\n    values.begin_date &&\r\n    values.begin_date.getTime &&\r\n    !values.begin_date.getTime()\r\n  ) {\r\n    errors.begin_date = [\"Fecha incorrecta\"];\r\n  }\r\n  if (\r\n    values.end_date &&\r\n    values.end_date.getTime &&\r\n    !values.end_date.getTime()\r\n  ) {\r\n    errors.end_date = [\"Fecha incorrecta\"];\r\n  }\r\n  return errors;\r\n};\r\nexport class ResCreate extends Component {\r\n  render() {\r\n    return (\r\n      <Create {...this.props}>\r\n        <TabbedForm validate={values => validate(values)}>\r\n          <FormTab label=\"Datos Generales\">\r\n            <ReferenceInput\r\n              source=\"organizer\"\r\n              reference=\"organizers\"\r\n              validate={required()}\r\n            >\r\n              <SelectInput optionText=\"email\" />\r\n            </ReferenceInput>\r\n            <DateTimeInput source=\"begin_date\" validate={required()} />\r\n            <FormDataConsumer>\r\n              {({ formData, ...rest }) => (\r\n                <DateTimeInput\r\n                  source=\"end_date\"\r\n                  validate={required()}\r\n                  defaultValue={\r\n                    formData.begin_date && formData.begin_date.getTime\r\n                      ? new Date(formData.begin_date.getTime() + 3600000)\r\n                      : undefined\r\n                  }\r\n                  {...rest}\r\n                />\r\n              )}\r\n            </FormDataConsumer>\r\n\r\n            <TextInput source=\"name\" validate={required()} />\r\n            <ReferenceInput\r\n              source=\"event_type\"\r\n              reference=\"eventtypes\"\r\n              validate={required()}\r\n            >\r\n              <SelectInput optionText=\"name\" />\r\n            </ReferenceInput>\r\n            <TextInput source=\"city\" validate={required()} />\r\n            <LongTextInput source=\"description\" />\r\n          </FormTab>\r\n          <FormTab label=\"Ubicación\">\r\n            <TextInput source=\"location\" defaultValue=\"-5.748529,41.513958\" />\r\n            <TextInput source=\"adress\" />\r\n            <TextInput source=\"zip_code\" />\r\n\r\n            <ReferenceInput source=\"province\" reference=\"provinces\">\r\n              <SelectInput optionText=\"name\" />\r\n            </ReferenceInput>\r\n\r\n            <ReferenceInput source=\"country\" reference=\"countries\">\r\n              <SelectInput optionText=\"name\" />\r\n            </ReferenceInput>\r\n          </FormTab>\r\n          <FormTab label=\"Información Adicional\">\r\n            <NumberInput source=\"min_age\" />\r\n\r\n            <FormDataConsumer>\r\n              {({ formData, ...rest }) =>\r\n                formData.indoor && (\r\n                  <NumberInput source=\"max_visitors\" {...rest} />\r\n                )\r\n              }\r\n            </FormDataConsumer>\r\n            <BooleanInput source=\"indoor\" />\r\n\r\n            <FormDataConsumer>\r\n              {({ formData, ...rest }) =>\r\n                !formData.free && <NumberInput source=\"price\" {...rest} />\r\n              }\r\n            </FormDataConsumer>\r\n            <BooleanInput source=\"free\" defaultValue={true} />\r\n          </FormTab>\r\n        </TabbedForm>\r\n      </Create>\r\n    );\r\n  }\r\n}\r\n","import Icon from \"@material-ui/icons/DateRange\";\r\nexport const ResIcon = Icon;\r\n","export const service = {\r\n  baseURL: \"https://services.4events.net\"\r\n};\r\nexport const firebase = {\r\n  apiKey: \"AIzaSyBkfgSNKCSuH0Qmx7y5rsHKw2v4TtFyml0\",\r\n  authDomain: \"forevents-3a85b.firebaseapp.com\",\r\n  databaseURL: \"https://forevents-3a85b.firebaseio.com\",\r\n  projectId: \"forevents-3a85b\",\r\n  storageBucket: \"forevents-3a85b.appspot.com\",\r\n  messagingSenderId: \"452983298535\",\r\n  firebaseBucketConsole:\r\n    \"https://console.firebase.google.com/project/forevents-3a85b/storage/forevents-3a85b.appspot.com/files\"\r\n};\r\n","import axios from \"axios\";\r\n\r\n// Setup\r\nexport function setup(serviceConfig) {\r\n  axios.defaults.baseURL = serviceConfig.baseURL;\r\n  axios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\n  console.log(\r\n    \"<API> 4EVENTS.NET Axios Settings Ready. serviceConfig=%o\",\r\n    serviceConfig\r\n  );\r\n}\r\n\r\n// Login\r\nexport function login(email, password) {\r\n  const url = \"/apiv1/users/login\";\r\n  return axios.post(url, {\r\n    email,\r\n    password\r\n  });\r\n}\r\n","import { stringify } from \"query-string\";\r\nimport {\r\n  fetchUtils,\r\n  HttpError,\r\n  GET_LIST,\r\n  GET_ONE,\r\n  GET_MANY,\r\n  GET_MANY_REFERENCE,\r\n  CREATE,\r\n  UPDATE,\r\n  UPDATE_MANY,\r\n  DELETE,\r\n  DELETE_MANY\r\n} from \"react-admin\";\r\n\r\n/**\r\n * Maps react-admin queries to a simple REST API\r\n *\r\n * The REST dialect is similar to the one of FakeRest\r\n * @see https://github.com/marmelab/FakeRest\r\n * @example\r\n * GET_LIST     => GET http://my.api.url/posts?sort=['title','ASC']&range=[0, 24]\r\n * GET_ONE      => GET http://my.api.url/posts/123\r\n * GET_MANY     => GET http://my.api.url/posts?filter={ids:[123,456,789]}\r\n * UPDATE       => PUT http://my.api.url/posts/123\r\n * CREATE       => POST http://my.api.url/posts\r\n * DELETE       => DELETE http://my.api.url/posts/123\r\n */\r\nconst httpAuthClient = (url, options = {}) => {\r\n  if (!options.headers) {\r\n    options.headers = new Headers({ Accept: \"application/json\" });\r\n  }\r\n\r\n  /* set */\r\n  options.headers.set(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n\r\n  /** Authorization */\r\n  const token = localStorage.getItem(\"token\");\r\n  if (token) {\r\n    options.headers.set(\"x-access-token\", token);\r\n    /*\r\n    options.user = {\r\n      authenticated: true,\r\n      token: token\r\n    };*/\r\n  }\r\n\r\n  /* done */\r\n  return fetchUtils.fetchJson(url, options);\r\n};\r\nexport default (apiUrl, httpClient = httpAuthClient) => {\r\n  /**\r\n   * @param {String} type One of the constants appearing at the top if this file, e.g. 'UPDATE'\r\n   * @param {String} resource Name of the resource to fetch, e.g. 'posts'\r\n   * @param {Object} params The data request params, depending on the type\r\n   * @returns {Object} { url, options } The HTTP request parameters\r\n   */\r\n  const convertDataRequestToHTTP = (type, resource, params) => {\r\n    let url = \"\";\r\n    let profile = \"User\";\r\n    if (resource === \"organizers\") {\r\n      profile = \"Organizer\";\r\n      resource = \"users\";\r\n    }\r\n    if (resource === \"admins\") {\r\n      profile = \"Admin\";\r\n      resource = \"users\";\r\n    }\r\n    const options = {};\r\n    switch (type) {\r\n      case GET_LIST: {\r\n        const { page, perPage } = params.pagination;\r\n        const { field, order } = params.sort;\r\n\r\n        /* check */\r\n        if (resource === \"users\") {\r\n          /* set */\r\n          const orderSign = order === \"DESC\" ? \"-\" : \"\";\r\n          let sortQuery = {};\r\n          if (field) sortQuery[\"sort\"] = orderSign + field;\r\n\r\n          /* set */\r\n          let filterQuery = {};\r\n          if (params.filter.q) filterQuery[\"queryText\"] = params.filter.q;\r\n          if (params.filter.create_date)\r\n            filterQuery[\"create_date\"] = params.filter.create_date;\r\n          filterQuery[\"profile\"] = profile;\r\n          if (params.filter.city) filterQuery[\"city\"] = params.filter.city;\r\n\r\n          /* set */\r\n          const query = {\r\n            skip: (page - 1) * perPage,\r\n            limit: perPage,\r\n            includeTotal: \"true\",\r\n            fields:\r\n              \"create_date profile email first_name last_name alias address zip_code province country idn company_name mobile_number phone_number favorite_searches transactions events\",\r\n            ...sortQuery,\r\n            ...filterQuery\r\n          };\r\n          console.log(\r\n            \"<APIClient> convertDataRequestToHTTP: GET_LIST - params.filter=%o, query=%o\",\r\n            params.filter,\r\n            query\r\n          );\r\n          url += `${apiUrl}/${resource}/list?${stringify(query)}`;\r\n        } else if (resource === \"provinces\" || resource === \"countries\") {\r\n          const orderSign = order === \"DESC\" ? \"-\" : \"\";\r\n          let sortQuery = {};\r\n          if (field) sortQuery[\"sort\"] = orderSign + field;\r\n\r\n          /* set */\r\n          const query = {\r\n            skip: (page - 1) * perPage,\r\n            limit: perPage,\r\n            includeTotal: \"true\",\r\n            ...sortQuery\r\n          };\r\n          console.log(\r\n            \"<APIClient> convertDataRequestToHTTP: GET_LIST - params.filter=%o, query=%o\",\r\n            params.filter,\r\n            query\r\n          );\r\n          url += `${apiUrl}/${resource}/list?${stringify(query)}`;\r\n        } else if (resource === \"eventtypes\") {\r\n          const orderSign = order === \"DESC\" ? \"-\" : \"\";\r\n          let sortQuery = {};\r\n          if (field) sortQuery[\"sort\"] = orderSign + field;\r\n\r\n          /* set */\r\n          const query = {\r\n            skip: (page - 1) * perPage,\r\n            limit: perPage,\r\n            includeTotal: \"true\",\r\n            ...sortQuery\r\n          };\r\n          console.log(\r\n            \"<APIClient> convertDataRequestToHTTP: GET_LIST - params.filter=%o, query=%o\",\r\n            params.filter,\r\n            query\r\n          );\r\n          url += `${apiUrl}/${resource}?${stringify(query)}`;\r\n        } else if (resource === \"events\") {\r\n          /* set */\r\n          const orderSign = order === \"DESC\" ? \"-\" : \"\";\r\n          let sortQuery = {};\r\n          if (field) sortQuery[\"sort\"] = orderSign + field;\r\n\r\n          /* set */\r\n          let filterQuery = {};\r\n          if (params.filter.q) filterQuery[\"queryText\"] = params.filter.q;\r\n\r\n          /* set */\r\n          const query = {\r\n            skip: (page - 1) * perPage,\r\n            limit: perPage,\r\n            includeTotal: \"true\",\r\n            ...sortQuery,\r\n            ...filterQuery\r\n          };\r\n          console.log(\r\n            \"<APIClient> convertDataRequestToHTTP: GET_LIST - params.filter=%o, query=%o\",\r\n            params.filter,\r\n            query\r\n          );\r\n          url += `${apiUrl}/${resource}?${stringify(query)}`;\r\n        } else {\r\n          /* set */\r\n          let filterQuery = {};\r\n          if (params.filter.name) filterQuery[\"name\"] = params.filter.name;\r\n\r\n          /* set */\r\n          const query = {\r\n            ...filterQuery\r\n          };\r\n          console.log(\r\n            \"<APIClient> convertDataRequestToHTTP: GET_LIST - params.filter=%o, query=%o\",\r\n            params.filter,\r\n            query\r\n          );\r\n          url += `${apiUrl}/${resource}?${stringify(query)}`;\r\n        }\r\n\r\n        break;\r\n      }\r\n      case GET_ONE:\r\n        if (resource === \"events\" || resource === \"eventtypes\")\r\n          url += `${apiUrl}/${resource}?id=${params.id}`;\r\n        else url += `${apiUrl}/${resource}/${params.id}`;\r\n        break;\r\n      case UPDATE:\r\n        options.method = \"PUT\";\r\n        if (resource === \"eventtypes\") {\r\n          url += `${apiUrl}/${resource}/${params.id}?${stringify({\r\n            name: params.data.name\r\n          })}`;\r\n        } else {\r\n          url += `${apiUrl}/${resource}/${params.id}`;\r\n          delete params.data.__v;\r\n          delete params.data._id;\r\n          delete params.data.id;\r\n          delete params.data.create_date;\r\n          delete params.data.delete_date;\r\n          if (resource === \"users\") {\r\n            delete params.data.password;\r\n          } else if (resource === \"events\") {\r\n            delete params.data.organizer;\r\n          }\r\n          options.body = stringify(params.data);\r\n        }\r\n        break;\r\n      case CREATE:\r\n        if (resource === \"users\") url += `${apiUrl}/${resource}/register`;\r\n        else if (resource === \"eventtypes\")\r\n          url += `${apiUrl}/${resource}?${stringify(params.data)}`;\r\n        else if (resource === \"events\")\r\n          url += `${apiUrl}/${resource}?${stringify(params.data)}`;\r\n        else url += `${apiUrl}/${resource}`;\r\n        options.method = \"POST\";\r\n        if (resource !== \"eventtypes\" && resource !== \"events\") {\r\n          if (resource === \"users\") params.data.profile = profile;\r\n          options.body = stringify(params.data);\r\n        }\r\n        break;\r\n      case DELETE:\r\n        if (resource === \"events\")\r\n          url += `${apiUrl}/${resource}/${params.id}?${stringify({\r\n            organizer: localStorage.getItem(\"id\"),\r\n            profile: localStorage.getItem(\"role\")\r\n          })}`;\r\n        else\r\n          url += `${apiUrl}/${resource}/${params.id}?${stringify({\r\n            admin: localStorage.getItem(\"id\")\r\n          })}`;\r\n        options.method = \"DELETE\";\r\n        console.log(\r\n          \"<APIClient> convertDataRequestToHTTP: DELETE - url=%o, options=%o\",\r\n          url,\r\n          options\r\n        );\r\n        break;\r\n      default:\r\n        throw new Error(`Unsupported fetch  action type ${type}`);\r\n    }\r\n    return { url, options };\r\n  };\r\n\r\n  /**\r\n   * @param {Object} response HTTP response from fetch()\r\n   * @param {String} type One of the constants appearing at the top if this file, e.g. 'UPDATE'\r\n   * @param {String} resource Name of the resource to fetch, e.g. 'posts'\r\n   * @param {Object} params The data request params, depending on the type\r\n   * @returns {Object} Data response\r\n   */\r\n  const convertHTTPResponse = (response, type, resource, params) => {\r\n    if (resource === \"organizers\") {\r\n      resource = \"users\";\r\n    }\r\n    if (resource === \"admins\") {\r\n      resource = \"users\";\r\n    }\r\n    const { json } = response;\r\n    console.log(\r\n      \"<APIClient> convertHTTPResponse: Entering, response=%o, type=%o. resource=%o, params=%o\",\r\n      response,\r\n      type,\r\n      resource,\r\n      params\r\n    );\r\n    switch (type) {\r\n      case GET_LIST:\r\n        let rows = json.result;\r\n        if (resource === \"users\") rows = json.result.rows;\r\n        else if (resource === \"provinces\") rows = json.result.rows;\r\n        else if (resource === \"countries\") rows = json.result.rows;\r\n        rows = rows.map(item => {\r\n          let res = { id: item._id, ...item };\r\n          if (\r\n            resource === \"events\" &&\r\n            item.location &&\r\n            item.location.coordinates\r\n          ) {\r\n            res.location =\r\n              item.location.coordinates[0] + \",\" + item.location.coordinates[1];\r\n          }\r\n          return res;\r\n        });\r\n        let total = rows.length;\r\n        if (json.result.total) total = json.result.total;\r\n\r\n        return {\r\n          data: rows,\r\n          total: total\r\n        };\r\n      case CREATE:\r\n        if (resource === \"users\")\r\n          return { data: { ...json.user, id: json.user._id } };\r\n        else {\r\n          let res = { data: { ...json.data, id: json.data._id } };\r\n          if (\r\n            resource === \"events\" &&\r\n            json.data.location &&\r\n            json.data.location.coordinates\r\n          ) {\r\n            res.data.location =\r\n              json.data.location.coordinates[0] +\r\n              \",\" +\r\n              json.data.location.coordinates[1];\r\n          }\r\n          return res;\r\n        }\r\n      case GET_ONE:\r\n        if (resource === \"users\")\r\n          return { data: { ...json.user, id: json.user._id } };\r\n        else if (resource === \"events\") {\r\n          let res = { data: { ...json.result[0], id: json.result[0]._id } };\r\n          if (\r\n            resource === \"events\" &&\r\n            json.result[0].location &&\r\n            json.result[0].location.coordinates\r\n          ) {\r\n            res.data.location =\r\n              json.result[0].location.coordinates[0] +\r\n              \",\" +\r\n              json.result[0].location.coordinates[1];\r\n          }\r\n          return res;\r\n        } else return { data: { ...json.result, id: json.result._id } };\r\n      case UPDATE:\r\n        if (resource === \"users\")\r\n          return { data: { ...json.user, id: json.user._id } };\r\n        else if (resource === \"events\") {\r\n          let res = { data: { ...json.result, id: json.result._id } };\r\n          if (\r\n            resource === \"events\" &&\r\n            json.result.location &&\r\n            json.result.location.coordinates\r\n          ) {\r\n            res.data.location =\r\n              json.result.location.coordinates[0] +\r\n              \",\" +\r\n              json.result.location.coordinates[1];\r\n          }\r\n          return res;\r\n        } else if (resource === \"eventtypes\")\r\n          return { data: { ...json.result, id: json.result._id } };\r\n        else return { data: json };\r\n      default:\r\n        return { data: json };\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {string} type Request type, e.g GET_LIST\r\n   * @param {string} resource Resource name, e.g. \"posts\"\r\n   * @param {Object} payload Request parameters. Depends on the request type\r\n   * @returns {Promise} the Promise for a data response\r\n   */\r\n  return (type, resource, params) => {\r\n    console.log(\r\n      \"<APIClient> main: type=%o. resource=%o, params=%o\",\r\n      type,\r\n      resource,\r\n      params\r\n    );\r\n    // simple-rest doesn't handle GET_MANY route, so we fallback to calling GET n times instead\r\n    if (type === GET_MANY) {\r\n      if (resource === \"organizers\") {\r\n        resource = \"users\";\r\n      }\r\n      if (resource === \"admins\") {\r\n        resource = \"users\";\r\n      }\r\n      return Promise.all(\r\n        params.ids.map(id => {\r\n          let url = `${apiUrl}/${resource}/${id}`;\r\n          if (resource === \"eventtypes\") url = `${apiUrl}/${resource}?id=${id}`;\r\n          return httpClient(url, {\r\n            method: \"GET\"\r\n          });\r\n        })\r\n      ).then(responses => {\r\n        console.log(\r\n          \"<APIClient> main: GET_MANY - Got, responses=%o\",\r\n          responses\r\n        );\r\n        return {\r\n          data: responses.map(response => {\r\n            if (resource === \"users\")\r\n              return { ...response.json.user, id: response.json.user._id };\r\n            else\r\n              return { ...response.json.result, id: response.json.result._id };\r\n          })\r\n        };\r\n      });\r\n    }\r\n    // simple-rest doesn't handle filters on UPDATE route, so we fallback to calling UPDATE n times instead\r\n    if (type === UPDATE_MANY) {\r\n      if (resource === \"organizers\") {\r\n        resource = \"users\";\r\n      }\r\n      if (resource === \"admins\") {\r\n        resource = \"users\";\r\n      }\r\n      return Promise.all(\r\n        params.ids.map(id =>\r\n          httpClient(`${apiUrl}/${resource}/${id}`, {\r\n            method: \"PUT\",\r\n            body: stringify(params.data)\r\n          })\r\n        )\r\n      ).then(responses => ({\r\n        data: responses.map(response => response.json)\r\n      }));\r\n    }\r\n    // simple-rest doesn't handle  filters on DELETE route, so we fallback to calling DELETE n times instead\r\n    if (type === DELETE_MANY) {\r\n      if (resource === \"organizers\") {\r\n        resource = \"users\";\r\n      }\r\n      if (resource === \"admins\") {\r\n        resource = \"users\";\r\n      }\r\n      return Promise.all(\r\n        params.ids.map(id => {\r\n          let url = `${apiUrl}/${resource}/${id}?${stringify({\r\n            admin: localStorage.getItem(\"id\")\r\n          })}`;\r\n          if (resource === \"events\")\r\n            url = `${apiUrl}/${resource}/${id}?${stringify({\r\n              organizer: localStorage.getItem(\"id\"),\r\n              profile: localStorage.getItem(\"role\")\r\n            })}`;\r\n          return httpClient(url, {\r\n            method: \"DELETE\"\r\n          });\r\n        })\r\n      ).then(responses => ({\r\n        data: responses.map(response => response.json)\r\n      }));\r\n    }\r\n\r\n    const { url, options } = convertDataRequestToHTTP(type, resource, params);\r\n    return httpClient(url, options)\r\n      .then(response => {\r\n        return convertHTTPResponse(response, type, resource, params);\r\n      })\r\n      .catch(function(error) {\r\n        console.log(\r\n          \"<APIClient> Exception caught, args=%o, status=%o\",\r\n          arguments,\r\n          error.status\r\n        );\r\n        if (error.status < 200 || error.status >= 300) {\r\n          let message =\r\n            (error.body && error.body.error && error.body.error.message) ||\r\n            (error.body && error.body.result && error.body.result.message) ||\r\n            (error.body && error.body.message) ||\r\n            error.message;\r\n          let errors = error.body.errors;\r\n          if (!errors) errors = error.body.result;\r\n\r\n          if (errors && errors.length > 0) {\r\n            message = \"invalid_format_\" + errors[0].field;\r\n          }\r\n          console.log(\r\n            \"<APIClient> Got, errors=%o, message=%o\",\r\n            errors,\r\n            message\r\n          );\r\n          return Promise.reject(new HttpError(message, error.status));\r\n        }\r\n      });\r\n  };\r\n};\r\n","import * as service from \"./service\";\r\nimport * as firebase from \"./firebase\";\r\nimport client from \"./client2\";\r\n\r\nexport { service, firebase, client };\r\n\r\n// Setup\r\nexport const setup = (serviceConfig, firebaseConfig) => {\r\n  service.setup(serviceConfig);\r\n  firebase.setup(firebaseConfig);\r\n};\r\n","import * as firebase from \"firebase\";\r\nimport * as Config from \"../../App/cfg\";\r\n\r\n// Setup\r\nexport const setup = firebaseConfig => {\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase\r\n    .auth()\r\n    .signInAnonymously()\r\n    .catch(function(error) {});\r\n  console.log(\"<APIFirebase> Firebase Initialized!\");\r\n};\r\n\r\n// Upload File\r\nexport const upload = file =>\r\n  firebase\r\n    .storage()\r\n    .ref()\r\n    .child(\"images/\" + new Date().getTime() + \"_\" + file.name)\r\n    .put(file, {\r\n      contentType: file.type\r\n    })\r\n    .then(snapshot => snapshot.ref.getDownloadURL());\r\n","import * as firebase from \"../firebase\";\r\n\r\n// Upload File to Firebase\r\nconst uploadFileToFirebase = file => firebase.upload(file.rawFile);\r\n\r\n// Add Upload Feature\r\nconst addUploadFeature = requestHandler => (type, resource, params) => {\r\n  console.log(\r\n    \"<UploadFeature> requestHandler: type=%o, resource=%o, params=%o\",\r\n    type,\r\n    resource,\r\n    params\r\n  );\r\n\r\n  /* check */\r\n  if (type === \"CREATE\" && resource === \"posts\") {\r\n    const newPictures = [params.data.pictures];\r\n    console.log(\r\n      \"<UploadFeature> requestHandler: CREATE, newPictures=%o\",\r\n      newPictures\r\n    );\r\n\r\n    /* done */\r\n    return Promise.all(newPictures.map(uploadFileToFirebase))\r\n      .then(fileURLs =>\r\n        fileURLs.map(fileURL => ({\r\n          src: fileURL,\r\n          title: `${params.data.title}`\r\n        }))\r\n      )\r\n      .then(transformedNewPictures =>\r\n        requestHandler(type, resource, {\r\n          ...params,\r\n          data: {\r\n            ...params.data,\r\n            pictures: [...transformedNewPictures]\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  /* done */\r\n  return requestHandler(type, resource, params);\r\n};\r\n\r\nexport default addUploadFeature;\r\n","import { AUTH_LOGIN, AUTH_LOGOUT, AUTH_ERROR } from \"react-admin\";\r\nimport { service } from \"..\";\r\n\r\nexport default (type, params) => {\r\n  if (type === AUTH_LOGIN) {\r\n    const { username, password } = params;\r\n    return service\r\n      .login(username, password)\r\n      .then(response => {\r\n        console.log(\"<AuthProvider> Response response=%o\", response);\r\n        if (response.status < 200 || response.status >= 300) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        localStorage.setItem(\"token\", response.data.token);\r\n        localStorage.setItem(\"id\", response.data.user._id);\r\n        localStorage.setItem(\"role\", response.data.user.profile);\r\n      })\r\n      .catch(function({ config, request, response }) {\r\n        console.log(\r\n          \"<AuthProvider> Exception caught, args=%o, config=%o, request=%o, response=%o\",\r\n          arguments,\r\n          config,\r\n          request,\r\n          response\r\n        );\r\n        throw new Error(response.data.message);\r\n      });\r\n  }\r\n  if (type === AUTH_LOGOUT) {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"id\");\r\n    localStorage.removeItem(\"role\");\r\n    return Promise.resolve();\r\n  }\r\n  if (type === AUTH_ERROR) {\r\n    const status = params.status;\r\n    if (status === 401 || status === 403) {\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"id\");\r\n      localStorage.removeItem(\"role\");\r\n      return Promise.reject();\r\n    }\r\n    return Promise.resolve();\r\n  }\r\n  return Promise.resolve();\r\n};\r\n","export const es = {\r\n  ra: {\r\n    page: {\r\n      dashboard: \"Inicio \"\r\n    },\r\n    action: {\r\n      export: \"Exportar (CSV)\",\r\n      sort: \"Ordenar\"\r\n    },\r\n    navigation: {\r\n      page_rows_per_page: \"Registros por página:\"\r\n    },\r\n    message: {\r\n      invalid_form: \"Datos inválidos. Por favor corrija los errores detectados\"\r\n    }\r\n  },\r\n  app: {\r\n    user_or_pass_wrong: \"Usuario o contraseña incorrectos\",\r\n    user_email_duplicated: \"El email indicado ya se encuentra en uso\",\r\n    user_or_password_wrong: \"Usuario o contraseña incorrectos\",\r\n    \"Not Found\": \"Sin resultados\",\r\n    invalid_format_city: \"Formato incorrecto (Población)\",\r\n    invalid_format_mobile_number: \"Formato incorrecto (Móvil)\",\r\n    invalid_format_phone_number: \"Formato incorrecto (Teléfono)\",\r\n    invalid_format_email: \"Formato incorrecto (Email)\",\r\n    invalid_format_begin_date: \"Fecha incorrecta (Inicio)\",\r\n    invalid_date: \"Fecha incorrecta\",\r\n    invalid_format_end_date: \"Fecha incorrecta (Fin)\",\r\n    error_saving_data: \"Error Inesperado del Servidor (500)\"\r\n  },\r\n  resources: {\r\n    admins: {\r\n      name: \"Administradores\",\r\n      fields: {\r\n        first_name: \"Nombre\",\r\n        last_name: \"Apellido(s)\",\r\n        profile: \"Perfil\",\r\n        email: \"Email\"\r\n      }\r\n    },\r\n    organizers: {\r\n      name: \"Organizadores\",\r\n      fields: {\r\n        first_name: \"Nombre\",\r\n        last_name: \"Apellido(s)\",\r\n        profile: \"Perfil\",\r\n        email: \"Email\",\r\n        address: \"Dirección\",\r\n        zip_code: \"Código Postal\",\r\n        city: \"Población\",\r\n        province: \"Provincia\",\r\n        country: \"País\",\r\n        idn: \"CIF\",\r\n        company_name: \"Razón Social\",\r\n        mobile_number: \"Móvil\",\r\n        phone_number: \"Teléfono\",\r\n        website: \"Sitio Web\"\r\n      }\r\n    },\r\n    users: {\r\n      name: \"Usuarios\",\r\n      fields: {\r\n        first_name: \"Nombre\",\r\n        last_name: \"Apellido(s)\",\r\n        profile: \"Perfil\",\r\n        email: \"Email\"\r\n      }\r\n    },\r\n    eventtypes: {\r\n      name: \"Categorías\",\r\n      fields: {\r\n        id: \"ID\",\r\n        name: \"Nombre\"\r\n      }\r\n    },\r\n    events: {\r\n      name: \"Eventos\",\r\n      fields: {\r\n        id: \"ID\",\r\n        organizer: \"Organizador\",\r\n        begin_date: \"Fecha/hora de Inicio\",\r\n        end_date: \"Fecha/hora de Fin\",\r\n        name: \"Nombre\",\r\n        location: \"Posición\",\r\n        event_type: \"Categoría\",\r\n        city: \"Población\",\r\n        user: \"Asistentes\",\r\n        transaction: \"Transacciones\",\r\n        media: \"Fotos\",\r\n        adress: \"Dirección\",\r\n        zip_code: \"Código Postal\",\r\n        province: \"Provincia\",\r\n        country: \"País\",\r\n        indoor: \"Local Cerrado\",\r\n        max_visitors: \"Aforo Máximo\",\r\n        free: \"Gratuito\",\r\n        price: \"Precio\",\r\n        min_age: \"Edad Mínima\",\r\n        description: \"Descripción\",\r\n        create_date: \"Fecha de Creación\"\r\n      }\r\n    }\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Admin, Resource, ListGuesser, EditGuesser } from \"react-admin\";\r\n\r\n// App Resources\r\nimport Home from \"../components/Home\";\r\nimport { AdminIcon, AdminList } from \"../components/admins\";\r\nimport {\r\n  OrganizerIcon,\r\n  OrganizerList,\r\n  OrganizerCreate,\r\n  OrganizerEdit\r\n} from \"../components/organizers\";\r\nimport { UserIcon, UserList, UserCreate, UserEdit } from \"../components/users\";\r\nimport { TypeIcon, TypeList, TypeCreate, TypeEdit } from \"../components/types\";\r\nimport {\r\n  EventIcon,\r\n  EventList,\r\n  EventEdit,\r\n  EventCreate\r\n} from \"../components/events\";\r\n\r\n// Config File\r\nimport * as Config from \"./cfg\";\r\n\r\n// API :: REST Service (Data & Auth Provider) + Firebase (Image Uploading Storage)\r\nimport * as api from \"../api\";\r\nimport addUploadFeature from \"../api/client2/addUploadFeature\";\r\nimport authProvider from \"../api/auth\";\r\n\r\n// Utilities\r\nimport * as JSON from \"../utils/JSON\";\r\n\r\n// i18N Provider\r\nimport stdSpanishMessages from \"ra-language-spanish\";\r\nimport jsonServerProvider from \"ra-data-json-server\";\r\nimport * as resources from \"../i18n\";\r\nconst messages = {\r\n  es: {\r\n    ra: JSON.mergeObjects(stdSpanishMessages.ra, resources.es.ra),\r\n    resources: resources.es.resources,\r\n    ...resources.es.app\r\n  }\r\n};\r\nconst i18nProvider = locale => messages[locale];\r\n\r\n// Data Provider\r\n/*const dataProvider = jsonServerProvider(\r\n  \"https://cors-anywhere.herokuapp.com/https://jsonplaceholder.typicode.com\"\r\n);*/\r\nconst dataProvider = api.client(Config.service.baseURL + \"/apiv1\");\r\nconst uploadCapableDataProvider = addUploadFeature(dataProvider);\r\n\r\n// App\r\n/*<Resource\r\n  name=\"posts\"\r\n  icon={PostIcon}\r\n  list={PostList}\r\n  edit={PostEdit}\r\n  create={PostCreate}\r\n/> */\r\nexport default class App extends Component {\r\n  componentWillMount() {\r\n    api.setup(Config.service, Config.firebase);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Admin\r\n        authProvider={authProvider}\r\n        dashboard={Home}\r\n        dataProvider={uploadCapableDataProvider}\r\n        locale=\"es\"\r\n        i18nProvider={i18nProvider}\r\n      >\r\n        <Resource name=\"admins\" icon={AdminIcon} list={AdminList} />\r\n        <Resource\r\n          name=\"organizers\"\r\n          icon={OrganizerIcon}\r\n          list={OrganizerList}\r\n          create={OrganizerCreate}\r\n          edit={OrganizerEdit}\r\n        />\r\n        <Resource\r\n          name=\"users\"\r\n          icon={UserIcon}\r\n          list={UserList}\r\n          create={UserCreate}\r\n          edit={UserEdit}\r\n        />\r\n        <Resource\r\n          name=\"events\"\r\n          icon={EventIcon}\r\n          list={EventList}\r\n          create={EventCreate}\r\n          edit={EventEdit}\r\n        />\r\n        <Resource\r\n          name=\"eventtypes\"\r\n          icon={TypeIcon}\r\n          list={TypeList}\r\n          create={TypeCreate}\r\n          edit={TypeEdit}\r\n        />\r\n        <Resource name=\"provinces\" />\r\n        <Resource name=\"countries\" />\r\n      </Admin>\r\n    );\r\n  }\r\n}\r\n","export const mergeObjects = (obj1, obj2) => {\r\n  if (!obj1 && !obj2) return null;\r\n  if (!obj1) return JSON.parse(JSON.stringify(obj2));\r\n  if (!obj2) return JSON.parse(JSON.stringify(obj1));\r\n  var merged = {};\r\n  for (var key1 in obj1) {\r\n    if (obj2[key1] && obj2[key1] instanceof Object) {\r\n      merged[key1] = mergeObjects(obj1[key1], obj2[key1]);\r\n    } else if (obj2[key1]) {\r\n      merged[key1] = obj2[key1];\r\n    } else merged[key1] = obj1[key1];\r\n  }\r\n  for (var key2 in obj2) {\r\n    if (!obj1[key2]) {\r\n      merged[key2] = obj2[key2];\r\n    }\r\n  }\r\n  return merged;\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}